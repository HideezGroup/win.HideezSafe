//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DeviceMaintenance.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DeviceMaintenance.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select firmware file.
        /// </summary>
        internal static string AdvancedUpdate_Button_File {
            get {
                return ResourceManager.GetString("AdvancedUpdate.Button.File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose available version for your device model.
        /// </summary>
        internal static string AdvancedUpdate_RadioButton_ChooseVersion {
            get {
                return ResourceManager.GetString("AdvancedUpdate.RadioButton.ChooseVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a file.
        /// </summary>
        internal static string AdvancedUpdate_RadioButton_File {
            get {
                return ResourceManager.GetString("AdvancedUpdate.RadioButton.File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced update.
        /// </summary>
        internal static string AdvancedUpdate_Text {
            get {
                return ResourceManager.GetString("AdvancedUpdate.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model.
        /// </summary>
        internal static string AdvancedUpdate_Text_Model {
            get {
                return ResourceManager.GetString("AdvancedUpdate.Text.Model", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please, select firmware file.
        /// </summary>
        internal static string AdvancedUpdate_Text_SelectFile {
            get {
                return ResourceManager.GetString("AdvancedUpdate.Text.SelectFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        internal static string AdvancedUpdate_Text_Version {
            get {
                return ResourceManager.GetString("AdvancedUpdate.Text.Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced update.
        /// </summary>
        internal static string Button_AdvancedUpdate {
            get {
                return ResourceManager.GetString("Button.AdvancedUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start page.
        /// </summary>
        internal static string Button_StartPage {
            get {
                return ResourceManager.GetString("Button.StartPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically start uploading device firmware.
        /// </summary>
        internal static string CheckBox_Autostart {
            get {
                return ResourceManager.GetString("CheckBox.Autostart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firmware update in progress!
        ///
        ///Are you sure you want to exit?.
        /// </summary>
        internal static string CloseOnUpdating_Text {
            get {
                return ResourceManager.GetString("CloseOnUpdating.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit application.
        /// </summary>
        internal static string CloseOnUpdating_Title {
            get {
                return ResourceManager.GetString("CloseOnUpdating.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update.
        /// </summary>
        internal static string Device_Button_Update {
            get {
                return ResourceManager.GetString("Device.Button.Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wipe.
        /// </summary>
        internal static string Device_Button_Wipe {
            get {
                return ResourceManager.GetString("Device.Button.Wipe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update finished.
        /// </summary>
        internal static string Device_Icon_Finished_Tooltip {
            get {
                return ResourceManager.GetString("Device.Icon.Finished.Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting....
        /// </summary>
        internal static string Device_Text_Connecting {
            get {
                return ResourceManager.GetString("Device.Text.Connecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PRESS THE BUTTON, Connecting....
        /// </summary>
        internal static string Device_Text_Connecting_PressButton {
            get {
                return ResourceManager.GetString("Device.Text.Connecting.PressButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entering boot mode....
        /// </summary>
        internal static string Device_Text_EnteringBoot {
            get {
                return ResourceManager.GetString("Device.Text.EnteringBoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed.
        /// </summary>
        internal static string Device_Text_Failed {
            get {
                return ResourceManager.GetString("Device.Text.Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to uploading firmware....
        /// </summary>
        internal static string Device_Text_UploadingFw {
            get {
                return ResourceManager.GetString("Device.Text.UploadingFw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wiping the device....
        /// </summary>
        internal static string Device_Text_Wiping {
            get {
                return ResourceManager.GetString("Device.Text.Wiping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to connect device.
        /// </summary>
        internal static string Error_FailedConnection_Csr {
            get {
                return ResourceManager.GetString("Error.FailedConnection.Csr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to connect device. Repair device or turn the Bluetooth off and on..
        /// </summary>
        internal static string Error_FailedConnection_WinBle {
            get {
                return ResourceManager.GetString("Error.FailedConnection.WinBle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No available firmware.
        /// </summary>
        internal static string Error_NoAvailableFw {
            get {
                return ResourceManager.GetString("Error.NoAvailableFw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quick update.
        /// </summary>
        internal static string QuickUpdate_Text {
            get {
                return ResourceManager.GetString("QuickUpdate.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pair device through Windows Bluetooth Settings to upload new firmware.
        /// </summary>
        internal static string Text_PairToStart {
            get {
                return ResourceManager.GetString("Text.PairToStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tap the device on the bluetooth dongle to upload new firmware.
        /// </summary>
        internal static string Text_TapToStart {
            get {
                return ResourceManager.GetString("Text.TapToStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After performing wipe:
        ///- All your FIDO data will be erased from your vault(this data cannot be restored!)
        ///- All your credentials will be erased from your vault
        ///- Your vault will be disconnected and unpaired from all devices
        ///
        ///To wipe the device, press OK, wait for the green light on the device then press and hold the button for 15 seconds..
        /// </summary>
        internal static string Wipe_Text {
            get {
                return ResourceManager.GetString("Wipe.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wipe the device.
        /// </summary>
        internal static string Wipe_Title {
            get {
                return ResourceManager.GetString("Wipe.Title", resourceCulture);
            }
        }
    }
}
